// <auto-generated />
using System;
using ITAssetManagement.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ITAssetManagement.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ITAssetManagement.API.Models.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AssetTag")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AssignedTo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("PurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("WarrantyExpiry")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AssetTag")
                        .IsUnique();

                    b.ToTable("Assets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssetTag = "LT001",
                            AssignedTo = "John Doe",
                            Brand = "Dell",
                            Category = "Laptop",
                            CreatedAt = new DateTime(2025, 8, 17, 17, 15, 9, 712, DateTimeKind.Local).AddTicks(3778),
                            CreatedBy = "admin",
                            Location = "Office Floor 1",
                            Model = "OptiPlex 7490",
                            Name = "Dell Laptop OptiPlex 1",
                            Notes = "",
                            PurchaseDate = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 1200.00m,
                            SerialNumber = "DL2024001",
                            Status = "Assigned",
                            UpdatedBy = "",
                            WarrantyExpiry = new DateTime(2027, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            AssetTag = "DT001",
                            AssignedTo = "",
                            Brand = "HP",
                            Category = "Desktop",
                            CreatedAt = new DateTime(2025, 8, 17, 17, 15, 9, 712, DateTimeKind.Local).AddTicks(3782),
                            CreatedBy = "admin",
                            Location = "IT Storage",
                            Model = "Pro 3500",
                            Name = "HP Desktop Pro 1",
                            Notes = "",
                            PurchaseDate = new DateTime(2024, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 800.00m,
                            SerialNumber = "HP2024001",
                            Status = "Available",
                            UpdatedBy = "",
                            WarrantyExpiry = new DateTime(2027, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            AssetTag = "MN001",
                            AssignedTo = "Jane Smith",
                            Brand = "Samsung",
                            Category = "Monitor",
                            CreatedAt = new DateTime(2025, 8, 17, 17, 15, 9, 712, DateTimeKind.Local).AddTicks(3787),
                            CreatedBy = "admin",
                            Location = "Office Floor 2",
                            Model = "S24E450",
                            Name = "Samsung Monitor 24 inch",
                            Notes = "",
                            PurchaseDate = new DateTime(2024, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 250.00m,
                            SerialNumber = "SM2024001",
                            Status = "Assigned",
                            UpdatedBy = "",
                            WarrantyExpiry = new DateTime(2026, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            AssetTag = "LT002",
                            AssignedTo = "",
                            Brand = "Lenovo",
                            Category = "Laptop",
                            CreatedAt = new DateTime(2025, 8, 17, 17, 15, 9, 712, DateTimeKind.Local).AddTicks(3790),
                            CreatedBy = "admin",
                            Location = "IT Department",
                            Model = "ThinkPad X1 Carbon",
                            Name = "Lenovo ThinkPad X1",
                            Notes = "Screen flickering issue - under repair",
                            PurchaseDate = new DateTime(2023, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 1800.00m,
                            SerialNumber = "LV2024001",
                            Status = "Maintenance",
                            UpdatedBy = "",
                            WarrantyExpiry = new DateTime(2026, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ITAssetManagement.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
